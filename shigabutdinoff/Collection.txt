// Object for working with collections
// by: shigabutdinoff

var Standard = new shigabutdinoff/Standard
var EnumeratesValues = new shigabutdinoff/EnumeratesValues
var Helpers = new shigabutdinoff/Helpers

// The items contained in the collection.
var items = []

// Create a collection from the given value.
func collect(items)
    var Collection = new shigabutdinoff/Collection
    Collection.items = EnumeratesValues.getArrayableItems(items)
    return Collection

// Create a collection with the given range.
func range(from, to)
    return collect(Standard.range(from, to))

// Get all of the items in the collection.
func all()
    return items

// TODO: LazyCollection

// Get the average value.
func avg()
    var values = []
    for item : items
        ? !Standard.is_null(item)
            values.Add(item)

    var count = values.Count()
    ? count
        return EnumeratesValues.sum(values) / count

// Get the median.
func median()
    var values = []
    for item : items
        ? !Standard.is_null(item)
            values.Add(item)
    values.Sort()

    var count = values.Count()

    ? count = 0
        return null

    var middle = count / 2

    ? count % 2
        return middle

    return collect([values[middle - 1], values[middle]]).avg()

// Get the mode.
func mode()
    ? count() = 0
        return null

// Count the number of items in the collection.
func count()
    return items.Count()